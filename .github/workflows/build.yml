name: Build
on:
  push:
    branches: [ "*" ]
    tags: [ "v*"]
env:
  OPENTAP_ANSI_COLORS: true
  OPENTAP_NO_UPDATE_CHECK: true

jobs:
  build:
    runs-on: codebuild-GitHubLinuxCodebuild-${{ github.run_id }}-${{ github.run_attempt }}
    container: ghcr.io/opentap/oci-images/build-dotnet:latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Fix tags
      if: startsWith(github.ref, 'refs/tags/v')
      run: git fetch -f origin ${{ github.ref }}:${{ github.ref }}
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 6.0.x
    - name: Cache Packages
      uses: actions/cache@v4
      with:
        key: '9.25.1-DocumentationGeneration1.0.2,Sign:1.5.0'
        path: ~/.local/share/OpenTap/PackageCache
    - name: Setup OpenTAP
      uses: opentap/setup-opentap@main
      with:
        version: 9.25.1
        packages: 'DocumentationGeneration:1.0.2,Sign:1.5.0'
        additional-repository: 'https://test-automation.pw.keysight.com/api/packages'
        additional-repository-token: '${{ secrets.KS8500TOKEN }}'
    - name: Build Docs
      run: tap generate-pdf LabVIEW.md --out ../bin/Release/OpenTAP\ LabVIEW.pdf --title "OpenTAP LabVIEW Plugin"
      working-directory: doc
    
    - name: Build
      run: |
        dotnet build -c Release
        cd bin/Release
        mkdir Packages/LabVIEW\ Examples/
        cp -r ../../Dependency/OpenTap.LabView.Test1/ Packages/LabVIEW\ Examples/     
    - name: Write Sign Cert
      env: 
        TAP_SIGN_CERT: ${{ github.workspace }}/sign.cer
      run:  echo "${{ secrets.SIGN_SERVER_CERT }}" > $TAP_SIGN_CERT
    - name: Create Package
      working-directory: bin/Release
      env: 
        TAP_SIGN_ADDRESS: ${{ secrets.TAP_SIGN_ADDRESS_INTERNAL }}
        TAP_SIGN_AUTH:  ${{ secrets.TAP_SIGN_AUTH }}
        TAP_SIGN_CERT: ${{ github.workspace }}/sign.cer
        Sign: true        
        Platform: "Windows"
        Architecture:  "x64"
      run: |
        .\tap.exe package create -v -c ../../package.xml    
        .\tap.exe package create -v -c ../../package.example.xml

    - name: Upload binaries
      uses: actions/upload-artifact@v4
      with:
        name: TapPackage
        retention-days: 14
        path: |
          bin/Release/*.TapPackage

  publish:
    runs-on: ubuntu-20.04
    needs: build
    steps:
    - name: Download binaries
      uses: actions/download-artifact@v4
      with:
        name: TapPackage
        path: bin/Release/
    - name: Setup OpenTAP
      uses: opentap/setup-opentap@v1.0
      with:
        version: 9.25.1
        packages: 'Repository Client:beta'
    - name: Publish Packages
      working-directory: bin/Release
      run: tap repo upload --repository https://test-automation.pw.keysight.com/api/packages --token ${{ secrets.KS8500TOKEN }} LabVIEW*.TapPackage
      
